library(UCSCXenaShiny)
library(UCSCXenaTools)
library(survminer)
data <- tcga_surv_get(
item = "PAX9",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample"),
opt_pancan = .opt_pancan
)
library(UCSCXenaShiny)
library(UCSCXenaTools)
library(survminer)
data <- tcga_surv_get(
item = "PAX9",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
tcga_surv_plot(
data,
time = "DSS.time",
status = "DSS",
cutoff_mode = "Custom",
cutpoint = c(50, 50),
profile = "methylation",
palette = "aaas"
data <- tcga_surv_get(
item = "PAX9",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
View(data)
data <- tcga_surv_get(
item = "PAX9",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample"),
opt_pancan = .opt_pancan
)
opt_pancan = .opt_pancan
opt_pancan = .opt_pancan
data <- tcga_surv_get(
item = "PAX9",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
data <- tcga_surv_get(
item = "(PAX9 + SEMA4A)",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
data <- tcga_surv_get(
item = "(PAX9 + SEMA4A)",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
data <- tcga_surv_get(
item = "(PAX9 + SEMA4A)",
TCGA_cohort = "LUAD",
profile = "methylation",
TCGA_cli_data = dplyr::full_join(load_data("tcga_clinical"), load_data("tcga_surv"), by
= "sample")
)
tcga_surv_plot(
data,
time = "DSS.time",
status = "DSS",
cutoff_mode = "Custom",
cutpoint = c(50, 50),
profile = "methylation",
palette = "aaas"
tcga_surv_plot(
data,
time = "DSS.time",
status = "DSS",
cutoff_mode = "Custom",
cutpoint = c(50, 50),
profile = "methylation",
palette = "aaas"
)
# ---------------------- Importação de Bibliotecas ----------------------
library(shiny)
library(DT)
library(ggplot2)
library(rsconnect)
library(dplyr)
library(UCSCXenaShiny)
library(fmsb)
library(survminer)
setwd("F:/Higor/Cancer_metabolism_analysis_06/13- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism")
# ---------------------- Run the app ----------------------
shiny::runApp("app.R")
# Carregar as bibliotecas necessárias
library(ggplot2)
library(dplyr)
library(rio)
setwd("F:/Higor/Cancer_metabolism_analysis_06/13- Results analysis/Signatures/")
# Carregar a tabela
results <- import("/Higor/Cancer_metabolism_analysis_06/12- Building_Signatures/All_signature/All_signature_pathways_interactions.rds")
# Filtrando Linhas Onde Todas as Colunas de Interesse Possuem Valores Válidos
immune_prognostic_results_filtered <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification),
~ . != "NS" & . != "No data"))
immune_prognostic_results_filtered_2 <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group),
~ . != "NS" & . != "No data"),
Microenvironment_Classification == "anti-tumoral",
Immune_Classification == "Hot")
View(results)
# Carregar as bibliotecas necessárias
library(ggplot2)
library(dplyr)
library(rio)
setwd("F:/Higor/Cancer_metabolism_analysis_06/14- Results analysis/")
# Carregar a tabela
results <- import("/Higor/Cancer_metabolism_analysis_06/12- Building_Signatures/All_signature/All_signature_pathways_interactions.rds")
# Carregar a tabela
results <- import("/Higor/Cancer_metabolism_analysis_06/13- Drug Response/DGIdb 5.0 drug-gene interaction analysis/All_signature_pathways_interactions.rds")
View(results)
# Filtrando Linhas Onde Todas as Colunas de Interesse Possuem Valores Válidos
results_filtered <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification),
~ . != "NS" & . != "No data" &. != "No Drug interaction information"))
# Filtrando Linhas Onde Todas as Colunas de Interesse Possuem Valores Válidos
immune_prognostic_results_filtered <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification),
~ . != "NS" & . != "No data"))
View(results_filtered)
# Filtrando Linhas Onde Todas as Colunas de Interesse Possuem Valores Válidos
results_filtered <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification, Annotation),
~ . != "NS" & . != "No data" &. != "No Drug interaction information"))
View(results_filtered)
teste <- results %>%
filter(if_all(c(OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification, Annotation),
~ . != "NS" & . != "No data" &. != "No Drug interaction information"))
View(teste)
teste2 <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group),
~ . != "NS" & . != "No data"),
Microenvironment_Classification == "anti-tumoral",
Immune_Classification == "Hot")
View(teste2)
teste3 <- results %>%
filter(if_all(c(OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification),
~ . != "NS" & . != "No data"))
View(teste3)
# Carregar a tabela
results <- import("/Higor/Cancer_metabolism_analysis_06/13- Drug Response/DGIdb 5.0 drug-gene interaction analysis/All_signature_pathways_interactions.rds")
setwd("F:/Higor/Cancer_metabolism_analysis_06/14- Results analysis/")
# Carregar a tabela
results <- import("/Higor/Cancer_metabolism_analysis_06/13- Drug Response/DGIdb 5.0 drug-gene interaction analysis/All_signature_pathways_interactions.rds")
# Filtrando Linhas Onde Todas as Colunas de Interesse Possuem Valores Válidos
results_filtered <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification, Annotation),
~ . != "NS" & . != "No data" &. != "No Drug interaction information"))
results_filtered_2 <- results %>%
filter(if_all(c(OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification, Annotation),
~ . != "NS" & . != "No data" &. != "No Drug interaction information"))
results_filtered_3 <- results %>%
filter(if_all(c(Type_Cox_OS, Type_Cox_DSS, Type_Cox_DFI, Type_Cox_PFI, OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group),
~ . != "NS" & . != "No data"),
Microenvironment_Classification == "anti-tumoral",
Immune_Classification == "Hot")
results_filtered_4 <- results %>%
filter(if_all(c(OS_Worst_Prognosis_Group, DSS_Worst_Prognosis_Group,
DFI_Worst_Prognosis_Group, PFI_Worst_Prognosis_Group,
Microenvironment_Classification, Immune_Classification),
~ . != "NS" & . != "No data"))
View(results_filtered)
saveRDS(results_filtered_2, "the_best_signature.rds")
# Define the directories
directories <- c("/Higor/Cancer_metabolism_analysis_06/15- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism/",
"/Higor/Cancer_metabolism_analysis_06/14- Results analysis/Signatures/")
# Save the RDS file in multiple directories
lapply(directories, function(dir) {
saveRDS(results_filtered_2, file.path(dir, "the_best_signature.rds"))
})
# Define the directories
directories <- c("/Higor/Cancer_metabolism_analysis_06/15- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism/",
"/Higor/Cancer_metabolism_analysis_06/14- Results analysis/")
# Save the RDS file in multiple directories
lapply(directories, function(dir) {
saveRDS(results_filtered_2, file.path(dir, "the_best_signature.rds"))
})
setwd("F:/Higor/Cancer_metabolism_analysis_06/13- Results analysis/Metabolism_signatures/")
setwd("F:/Higor/Cancer_metabolism_analysis_06/14- Results analysis/Metabolism_signatures/")
# Filtrar assinaturas específicas para cada camada ômica e salvar
# ----------------------------------------------------------------
Lipid_signature <- immune_prognostic_results_filtered %>% filter(Metabolism == "Lipid metabolism")
# ---------------------- Importação de Bibliotecas ----------------------
library(shiny)
library(DT)
library(ggplot2)
library(rsconnect)
library(dplyr)
library(UCSCXenaShiny)
library(fmsb)
library(survminer)
library(survival)
library(ggsci)
setwd("F:/Higor/Cancer_metabolism_analysis_06/14- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism")
# ---------------------- Run the app ----------------------
shiny::runApp("app.R")
setwd("F:/Higor/Cancer_metabolism_analysis_06/15- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism")
# ---------------------- Run the app ----------------------
shiny::runApp("app.R")
install.packages("htmltools")
install.packages("htmltools")
# ---------------------- Importação de Bibliotecas ----------------------
library(shiny)
library(DT)
library(ggplot2)
library(rsconnect)
library(dplyr)
library(UCSCXenaShiny)
library(fmsb)
library(survminer)
library(survival)
library(ggsci)
setwd("F:/Higor/Cancer_metabolism_analysis_06/15- Cancer GPS Pathways Shiny/Exploring pan-cancer metabolism")
# ---------------------- Run the app ----------------------
shiny::runApp("app.R")
View(results_filtered_2)
# ---------------------- Run the app ----------------------
shiny::runApp("app.R")
# Análise da quantidade de observações únicas
Cancer_Types <- results %>%
group_by(Cancer_Types) %>%
summarise(quantidade = n()) %>%
arrange(desc(quantidade))
View(Cancer_Types)
# Análise da quantidade de observações únicas
Cancer_Types <- results_filtered_2 %>%
group_by(Cancer_Types) %>%
summarise(quantidade = n()) %>%
arrange(desc(quantidade))
View(Cancer_Types)
setwd("F:/Higor/CancerRCDShiny/CancerRCDShiny")
# Rum the app
shiny::runApp()
View(target_data)
remove.packages("survminer")
unlink("C:/Users/NUDIM/AppData/Local/R/win-library/4.2/survminer", recursive = TRUE, force = TRUE)
install.packages("survminer", dependencies = TRUE)
install.packages("survminer", dependencies = TRUE)
